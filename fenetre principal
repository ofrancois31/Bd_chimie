import tkinter as tk
import sqlite3
from contenu_database import Affiche_Database
from fenetre_recherche import Recherche_Fenetre
from suppressions_db import Suppression

#fenetre principal de l'application
class Principal(tk.Frame):
    """Creé la fenetre principale"""
    def __init__(self, root):
        super().__init__(root)
        self.champs={
        'identifiant': tk.StringVar(),
        'nom': tk.StringVar(),
        'quantite': tk.StringVar()}
        self._nouveau()
        self.pack()

    def _nouveau(self):
        """Proprieté de la fenetre principale"""
        label_identifiant = tk.Label(self, text='identifiant')
        label_identifiant.grid(column=0, row=0)

        text_identifiant = tk.Entry(self,
                                textvariable=self.champs['identifiant'])
        text_identifiant.grid(column=1, row=0, columnspan=2)

        label_nom=tk.Label(self,text='nom')
        label_nom.grid(column=0, row=1)

        text_nom=tk.Entry(self,
                            textvariable=self.champs['nom'])
        text_nom.grid(column=1, row=1, columnspan=2)

        label_quantite=tk.Label(self,text='quantite')
        label_quantite.grid(column=0,row=2,columnspan=2)

        text_quantite=tk.Entry(self,
                               textvariable=self.champs['quantite'])
        text_quantite.grid(column=2,row=2,columnspan=2)

        bouton_valid=tk.Button(self, text="valider", command=self.valider)
        bouton_valid.grid(column=0,row=3)

        bouton_quit=tk.Button(self,text="quitter",command=self.destroy)
        bouton_quit.grid(column=3, row=3)
        
        bouton_recherche = tk.Button(self,text='rechercher', command = self.recherche)
        bouton_recherche.grid(column=0,row=4)
        
        bouton_affiche_db = tk.Button(self, text="afficher_db", command = self.affiche)
        bouton_affiche_db.grid(column=3,row=4)
        
        bouton_supprime_db = tk.Button(self, text="supprime_db" , command = self.supprime)
        bouton_supprime_db.grid(column=2,row=4)
    
    def valider(self):
        """Récupère les valeurs entrée dans les champs de saisie
           et les met dans la database produits.db
        """
        liste_imbrique = [[]]
        for iteme in self.champs.values():
            liste_imbrique[0].append(str(iteme.get()))

        conn = sqlite3.connect('produits.db')
        cur = conn.cursor()

        try :
            cur.execute("CREATE TABLE membres(identifiant TEXT,nom TEXT,quantite TEXT)")
        except sqlite3.OperationalError :
            pass
        for lecteur in liste_imbrique:
            cur.execute("INSERT INTO membres(identifiant,nom,quantite)VALUES(?,?,?)", lecteur)
        conn.commit()
        cur.close()
        conn.close()
    
    def recherche(self):
        """affiche la fenetre de recherche"""
        recherches = Recherche_Fenetre(parent=app)

    def affiche(self):
        """affiche le contenu de la db"""
        affiches = Affiche_Database()
        affiches.affiche_db()
        affiches.afficher_text()

    def supprime(self):
        """supprime une enree dans la database"""
        sup = Suppression()

app=tk.Tk()
Principal(app)
app.title("Labo_database")
app.mainloop()
